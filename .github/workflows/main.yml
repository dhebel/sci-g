# For all pushes to the main branch run the tests and push the image to the
# GitHub registry under an edge tag so we can use it for the nightly
# integration tests
name: geometry

on:
  push:
  pull_request:

jobs:
  validation_job:
    runs-on: ubuntu-latest
    container: jeffersonlab/gemc:3.0
    name: Sci-g Geometry Validation
    steps:
      # GitHub Actions do not automatically checkout your projects. If you need the code
      # you need to check it out.
      - name: Checkout
        uses: actions/checkout@main
      - name: Add current directory to PYTHONPATH
        run:
          echo 'PYTHONPATH="$PWD":$PYTHONPATH' >> $GITHUB_ENV
      - name: Test examples
        run: |
          for example in 1_Simple_detector/ex1_1_simple_det 1_Simple_detector/ex1_2_dosimeter
          do
            cd examples/$example
            echo Building Geometry for $example
            ./example.py
            echo Running gemc for $example
            gemc example.jcard
            overlaps=`grep G4Exception-START MasterGeant4.log | wc | awk '{print $1}'`
            if (( "$overlaps" == "0" ))
            then
              echo "$overlaps" overlaps detected
            else
              echo "$overlaps" overlaps detected for $example, exiting
              exit 1
            fi
            cd -
          done
      - name: Test projects
        run: |    
          declare -A projectDir
          declare -A gcard

          # project directory and jcard. They key itself is the python script used to build the geometry
          projectDir["targets.py"]="projects/clas12/targets"
          gcard["targets.py"]="target.jcard"

          for project in ${!projectDir[@]}
          do
            echo
            cd "${projectDir[$project]}"
            echo "Running $project inside ${projectDir[$project]}"
            ./$project
            echo Running gemc using jcard "${gcard[$project]}"
            gemc "${gcard[$project]}"
            overlaps=`grep G4Exception-START MasterGeant4.log | wc | awk '{print $1}'`
            if (( "$overlaps" == "0" ))
            then
              echo "$overlaps" overlaps detected
            else
              echo "$overlaps" overlaps detected for $example, exiting
              exit 1
            fi
            cd -
          done